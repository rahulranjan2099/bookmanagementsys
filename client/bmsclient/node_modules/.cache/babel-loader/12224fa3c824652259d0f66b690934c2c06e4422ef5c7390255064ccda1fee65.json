{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"BookDetail\",\n  props: {\n    id: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      book: null,\n      newReview: \"\"\n    };\n  },\n  created() {\n    this.fetchBook();\n  },\n  methods: {\n    fetchBook() {\n      // Simulate fetching the book details from an API or store\n      const books = [{\n        id: \"1\",\n        title: \"To Kill a Mockingbird\",\n        author: \"Harper Lee\",\n        review: \"An amazing book about justice and morality.\",\n        reviews: []\n      }, {\n        id: \"2\",\n        title: \"1984\",\n        author: \"George Orwell\",\n        review: \"A dystopian novel about totalitarianism.\",\n        reviews: []\n      }, {\n        id: \"3\",\n        title: \"Moby Dick\",\n        author: \"Herman Melville\",\n        review: \"A novel about the adventures of the whaling ship Pequod.\",\n        reviews: []\n      }, {\n        id: \"4\",\n        title: \"The Great Gatsby\",\n        author: \"F. Scott Fitzgerald\",\n        review: \"A story of the young and mysterious millionaire Jay Gatsby.\",\n        reviews: []\n      }];\n      this.book = books.find(book => book.id === this.id);\n    },\n    addReview() {\n      if (this.newReview) {\n        this.book.reviews.push(this.newReview);\n        this.newReview = \"\";\n      }\n    },\n    goBack() {\n      this.$router.push({\n        name: \"BookList\"\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","props","id","type","String","required","data","book","newReview","created","fetchBook","methods","books","title","author","review","reviews","find","addReview","push","goBack","$router"],"sources":["src/components/bookDetails.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-card class=\"mt-5\">\n      <v-card-title>{{ book.title }}</v-card-title>\n      <v-card-text>\n        <div>\n          <strong>Author:</strong>\n          {{ book.author }}\n        </div>\n        <div>\n          <strong>Review:</strong>\n          {{ book.review }}\n        </div>\n        <v-btn @click=\"goBack\">Back to List</v-btn>\n      </v-card-text>\n    </v-card>\n\n    <v-card class=\"mt-5\">\n      <v-card-title>Add a Review</v-card-title>\n      <v-card-text>\n        <v-textarea v-model=\"newReview\" label=\"Your Review\" solo></v-textarea>\n        <v-btn color=\"primary\" @click=\"addReview\">Submit Review</v-btn>\n      </v-card-text>\n    </v-card>\n\n    <v-card class=\"mt-5\">\n      <v-card-title>Reviews</v-card-title>\n      <v-card-text>\n        <v-list>\n          <v-list-item v-for=\"(review, index) in book.reviews\" :key=\"index\">\n            <v-list-item-content>\n              <v-list-item-title>{{ review }}</v-list-item-title>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n      </v-card-text>\n    </v-card>\n  </v-container>\n</template>\n  \n  <script>\nexport default {\n  name: \"BookDetail\",\n  props: {\n    id: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      book: null,\n      newReview: \"\"\n    };\n  },\n  created() {\n    this.fetchBook();\n  },\n  methods: {\n    fetchBook() {\n      // Simulate fetching the book details from an API or store\n      const books = [\n        {\n          id: \"1\",\n          title: \"To Kill a Mockingbird\",\n          author: \"Harper Lee\",\n          review: \"An amazing book about justice and morality.\",\n          reviews: []\n        },\n        {\n          id: \"2\",\n          title: \"1984\",\n          author: \"George Orwell\",\n          review: \"A dystopian novel about totalitarianism.\",\n          reviews: []\n        },\n        {\n          id: \"3\",\n          title: \"Moby Dick\",\n          author: \"Herman Melville\",\n          review: \"A novel about the adventures of the whaling ship Pequod.\",\n          reviews: []\n        },\n        {\n          id: \"4\",\n          title: \"The Great Gatsby\",\n          author: \"F. Scott Fitzgerald\",\n          review: \"A story of the young and mysterious millionaire Jay Gatsby.\",\n          reviews: []\n        }\n      ];\n      this.book = books.find(book => book.id === this.id);\n    },\n    addReview() {\n      if (this.newReview) {\n        this.book.reviews.push(this.newReview);\n        this.newReview = \"\";\n      }\n    },\n    goBack() {\n      this.$router.push({ name: \"BookList\" });\n    }\n  }\n};\n</script>\n  \n  <style scoped>\n.mt-5 {\n  margin-top: 20px;\n}\n</style>\n  "],"mappings":";AAyCA;EACAA,IAAA;EACAC,KAAA;IACAC,EAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;EACA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,SAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,SAAA;EACA;EACAC,OAAA;IACAD,UAAA;MACA;MACA,MAAAE,KAAA,IACA;QACAV,EAAA;QACAW,KAAA;QACAC,MAAA;QACAC,MAAA;QACAC,OAAA;MACA,GACA;QACAd,EAAA;QACAW,KAAA;QACAC,MAAA;QACAC,MAAA;QACAC,OAAA;MACA,GACA;QACAd,EAAA;QACAW,KAAA;QACAC,MAAA;QACAC,MAAA;QACAC,OAAA;MACA,GACA;QACAd,EAAA;QACAW,KAAA;QACAC,MAAA;QACAC,MAAA;QACAC,OAAA;MACA,EACA;MACA,KAAAT,IAAA,GAAAK,KAAA,CAAAK,IAAA,CAAAV,IAAA,IAAAA,IAAA,CAAAL,EAAA,UAAAA,EAAA;IACA;IACAgB,UAAA;MACA,SAAAV,SAAA;QACA,KAAAD,IAAA,CAAAS,OAAA,CAAAG,IAAA,MAAAX,SAAA;QACA,KAAAA,SAAA;MACA;IACA;IACAY,OAAA;MACA,KAAAC,OAAA,CAAAF,IAAA;QAAAnB,IAAA;MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}