{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  name: \"BookDetail\",\n  props: {\n    id: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      book: null,\n      reviewObj: {\n        comment: null,\n        reviewerName: null,\n        reviewRating: null\n      },\n      snackbar: false,\n      snackbarText: \"\",\n      bookReview: null,\n      disableEdit: true,\n      reviewerRules: [v => !!v || 'Name is required', v => v && v.length <= 30 || 'Name must be less than 30 characters'],\n      commentRules: [v => !!v || 'Review is required', v => v && v.length <= 500 || 'Review must be less than 500 characters'],\n      ratingRules: [v => !!v || 'Rating is required'],\n      valid: false\n    };\n  },\n  async created() {\n    await this.fetchBook();\n    await this.fetchedAllBookReviews();\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.$refs.form.validate();\n      this.valid = false;\n    });\n  },\n  methods: {\n    async fetchBook() {\n      console.log(\"checkingiddd\", this.id);\n      const gotSingleBook = await axios.get(`http://localhost:5000/books/list/${this.id}`);\n      console.log(\"checkinggotListRes\", gotSingleBook);\n      this.book = gotSingleBook.data;\n    },\n    async addReview() {\n      try {\n        console.log(\"checkingaddreview...\");\n        if (!this.valid) return;\n        const gotReviewAddedRes = await axios.post(`http://localhost:5000/books/${this.id}/reviews`, this.reviewObj);\n        console.log(\"checkinggotListRes\", gotReviewAddedRes);\n        if (gotReviewAddedRes) {\n          this.snackbarText = gotReviewAddedRes.data;\n          this.snackbar = true;\n          this.reviewObj = {\n            comment: null,\n            reviewerName: null,\n            reviewRating: 3.5\n          };\n        }\n        await this.fetchedAllBookReviews();\n      } catch (err) {\n        console.log(\"checkinerr..\", err);\n        this.snackbarText = err;\n        this.snackbar = true;\n        throw new Error(err);\n      }\n    },\n    goBack() {\n      this.$router.push({\n        name: \"BookList\"\n      });\n    },\n    async fetchedAllBookReviews() {\n      try {\n        console.log(\"checkingparam\");\n        const gotReviewAddedRes = await axios.get(`http://localhost:5000/books/${this.id}/reviews`);\n        console.log(\"gotReviewAddedRes\", gotReviewAddedRes);\n        this.bookReview = gotReviewAddedRes.data;\n        this.disableEdit = true;\n      } catch (err) {\n        console.log(\"checkinerr...\", err);\n        throw new Error(err);\n      }\n    },\n    async editBook() {\n      try {\n        console.log(\"checkingedit\", this.book);\n        const {\n          author,\n          genre,\n          summary\n        } = this.book;\n        const sendingEdit = {\n          author,\n          genre,\n          summary\n        };\n        const gotUpdateRes = await axios.put(`http://localhost:5000/books/${this.id}`, sendingEdit);\n        console.log(\"checkinggotUpdateRes\", gotUpdateRes);\n        this.snackbarText = gotUpdateRes.data;\n        this.snackbar = true;\n        await this.fetchedAllBookReviews();\n      } catch (err) {\n        console.log(\"checkinerrputttt...\", err);\n        this.snackbarText = err;\n        this.snackbar = true;\n        throw new Error(err);\n      }\n    },\n    async deleteBook() {\n      try {\n        console.log(\"checkingdelete\", this.id);\n        const gotDeleteRes = await axios.delete(`http://localhost:5000/books/${this.id}`);\n        console.log(\"checkinggotDeleteRes\", gotDeleteRes);\n        this.snackbarText = gotDeleteRes.data;\n        this.snackbar = true;\n        this.goBack();\n      } catch (err) {\n        console.log(\"checkinerrdeleteee...\", err);\n        this.snackbarText = err;\n        this.snackbar = true;\n        throw new Error(err);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","id","type","String","required","data","book","reviewObj","comment","reviewerName","reviewRating","snackbar","snackbarText","bookReview","disableEdit","reviewerRules","v","length","commentRules","ratingRules","valid","created","fetchBook","fetchedAllBookReviews","mounted","$nextTick","$refs","form","validate","methods","console","log","gotSingleBook","get","addReview","gotReviewAddedRes","post","err","Error","goBack","$router","push","editBook","author","genre","summary","sendingEdit","gotUpdateRes","put","deleteBook","gotDeleteRes","delete"],"sources":["src/components/bookDetails.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-card class=\"mt-5\" v-if=\"book\">\n      <v-card-title>{{ book.title }}</v-card-title>\n      <v-card-text>\n        <div>\n          <strong>Author:</strong>\n          <!-- {{ book.author }} -->\n          <v-text-field v-model=\"book.author\" outlined dense hide-details :disabled=\"disableEdit\"></v-text-field>\n        </div>\n        <div>\n          <strong>Genre:</strong>\n          <!-- {{ book.genre }} -->\n          <v-text-field v-model=\"book.genre\" outlined dense hide-details :disabled=\"disableEdit\"></v-text-field>\n        </div>\n        <div>\n          <strong>Summary:</strong>\n          <!-- {{ book.summary }} -->\n          <v-text-field v-model=\"book.summary\" outlined dense hide-details :disabled=\"disableEdit\"></v-text-field>\n          \n        </div>\n        <v-row class=\"d-flex justify-center\">\n          <v-col cols=\"12\" sm=\"4\" md=\"4\" lg=\"6\" class=\"d-flex\">\n            <v-btn @click=\"goBack\">Back to List</v-btn>\n          </v-col>\n          <v-col cols=\"12\" sm=\"3\" md=\"4\" lg=\"4\" class=\"d-flex justify-end\">\n            <v-btn icon @click=\"()=> disableEdit = !disableEdit\">\n              <v-icon color=\"green\">mdi-account-edit</v-icon>\n            </v-btn>\n          </v-col>\n          <v-col cols=\"12\" sm=\"2\" md=\"2\" lg=\"2\" class=\"d-flex justify-end\">\n            <v-btn icon @click=\"deleteBook()\">\n              <v-icon color=\"red\">mdi-delete</v-icon>\n            </v-btn>\n          </v-col>\n        </v-row>\n        <v-row class=\"d-flex\" v-if=\"disableEdit == false\">\n          <v-col cols=\"12\">\n            <v-btn color=\"primary\" @click=\"editBook()\">Submit Edit</v-btn>\n          </v-col>\n        </v-row>\n      </v-card-text>\n    </v-card>\n\n    <v-card class=\"mt-5\">\n      <v-card-title>Add a Review</v-card-title>\n      <v-card-text>\n        <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n        <v-text-field v-model=\"reviewObj.reviewerName\" label=\"Your Name\" solo required :rules=\"reviewerRules\"></v-text-field>\n        <v-rating\n          v-model=\"reviewObj.reviewRating\"\n          color=\"yellow darken-3\"\n          background-color=\"grey darken-1\"\n          empty-icon=\"$ratingFull\"\n          half-increments\n          hover\n          large\n          :rules=\"ratingRules\"\n        ></v-rating>\n        <v-textarea v-model=\"reviewObj.comment\" label=\"Your Review\" solo :rules=\"commentRules\"></v-textarea>\n        <v-btn color=\"primary\" :disabled=\"!valid\" @click=\"addReview\">Submit Review</v-btn>\n      </v-form>\n      </v-card-text>\n    </v-card>\n\n    <v-card class=\"mt-5\">\n      <v-card-title>Reviews</v-card-title>\n      <v-card-text>\n        <v-list v-if=\"bookReview\">\n          <v-list-item v-for=\"(review, index) in bookReview\" :key=\"index\">\n            <v-list-item-content>\n              <v-list-item-title>Reviewer : {{ review.reviewer }}</v-list-item-title>\n              <v-rating\n                v-model=\"review.rating\"\n                color=\"teal darken-3\"\n                background-color=\"grey darken-1\"\n                empty-icon=\"$ratingFull\"\n                half-increments\n                hover\n                readonly\n              ></v-rating>\n              <v-list-item-title>Desc : {{ review.comment }}</v-list-item-title>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n      </v-card-text>\n    </v-card>\n    <v-snackbar v-model=\"snackbar\">\n      {{ snackbarText }}\n      <template v-slot:action=\"{ attrs }\">\n        <v-btn color=\"pink\" text v-bind=\"attrs\" @click=\"snackbar = false\">Close</v-btn>\n      </template>\n    </v-snackbar>\n  </v-container>\n</template>\n  \n  <script>\nimport axios from \"axios\";\nexport default {\n  name: \"BookDetail\",\n  props: {\n    id: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      book: null,\n      reviewObj: {\n        comment: null,\n        reviewerName: null,\n        reviewRating: null\n      },\n      snackbar: false,\n      snackbarText: \"\",\n      bookReview: null,\n      disableEdit: true,\n      reviewerRules: [\n        v => !!v || 'Name is required',\n        v => (v && v.length <= 30) || 'Name must be less than 30 characters'\n      ],\n      commentRules: [\n        v => !!v || 'Review is required',\n        v => (v && v.length <= 500) || 'Review must be less than 500 characters'\n      ],\n      ratingRules: [\n        v => !!v || 'Rating is required'\n      ],\n      valid: false,\n    };\n  },\n  async created() {\n    await this.fetchBook();\n    await this.fetchedAllBookReviews();\n  },\n  mounted(){\n    this.$nextTick(() => {\n      this.$refs.form.validate();\n      this.valid = false;\n    });\n  },\n  methods: {\n    async fetchBook() {\n      console.log(\"checkingiddd\", this.id);\n      const gotSingleBook = await axios.get(\n        `http://localhost:5000/books/list/${this.id}`\n      );\n      console.log(\"checkinggotListRes\", gotSingleBook);\n      this.book = gotSingleBook.data;\n    },\n    async addReview() {\n      try {\n        console.log(\"checkingaddreview...\");\n        if(!this.valid) return;\n\n        const gotReviewAddedRes = await axios.post(\n          `http://localhost:5000/books/${this.id}/reviews`,\n          this.reviewObj\n        );\n        console.log(\"checkinggotListRes\", gotReviewAddedRes);\n        if (gotReviewAddedRes) {\n          this.snackbarText = gotReviewAddedRes.data;\n          this.snackbar = true;\n          this.reviewObj = {\n            comment: null,\n            reviewerName: null,\n            reviewRating: 3.5\n          };\n        }\n        await this.fetchedAllBookReviews();\n      } catch (err) {\n        console.log(\"checkinerr..\", err);\n        this.snackbarText = err;\n        this.snackbar = true;\n        throw new Error(err);\n      }\n    },\n    goBack() {\n      this.$router.push({ name: \"BookList\" });\n    },\n    async fetchedAllBookReviews() {\n      try {\n        console.log(\"checkingparam\");\n        const gotReviewAddedRes = await axios.get(\n          `http://localhost:5000/books/${this.id}/reviews`\n        );\n        console.log(\"gotReviewAddedRes\", gotReviewAddedRes);\n        this.bookReview = gotReviewAddedRes.data;\n        this.disableEdit = true\n      } catch (err) {\n        console.log(\"checkinerr...\", err);\n        throw new Error(err);\n      }\n    },\n    async editBook() {\n      try {\n        console.log(\"checkingedit\", this.book);\n        const {author, genre, summary} = this.book;\n        const sendingEdit = {\n          author,\n          genre,\n          summary,\n        }\n        const gotUpdateRes = await axios.put(\n          `http://localhost:5000/books/${this.id}`, sendingEdit\n        );\n        console.log(\"checkinggotUpdateRes\", gotUpdateRes);\n        this.snackbarText = gotUpdateRes.data;\n        this.snackbar = true;\n        await this.fetchedAllBookReviews();\n      } catch (err) {\n        console.log(\"checkinerrputttt...\", err);\n        this.snackbarText = err;\n        this.snackbar = true;\n        throw new Error(err);\n      }\n    },\n    async deleteBook() {\n      try {\n        console.log(\"checkingdelete\", this.id);\n        const gotDeleteRes = await axios.delete(\n          `http://localhost:5000/books/${this.id}`\n        );\n        console.log(\"checkinggotDeleteRes\", gotDeleteRes);\n        this.snackbarText = gotDeleteRes.data;\n        this.snackbar = true;\n        this.goBack()\n      } catch (err) {\n        console.log(\"checkinerrdeleteee...\", err);\n        this.snackbarText = err;\n        this.snackbar = true;\n        throw new Error(err);\n      }\n    }\n  }\n};\n</script>\n  \n  <style scoped>\n.mt-5 {\n  margin-top: 20px;\n}\n</style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}